// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: query.sql

package storage

import (
	"context"
)

const authLogin = `-- name: AuthLogin :one
SELECT id, login, password, created_at, updated_at, deleted_at FROM users WHERE login = $1
`

func (q *Queries) AuthLogin(ctx context.Context, login string) (User, error) {
	row := q.db.QueryRowContext(ctx, authLogin, login)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Login,
		&i.Password,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.DeletedAt,
	)
	return i, err
}

const insertUser = `-- name: InsertUser :exec
INSERT INTO users
    (login, password)
VALUES 
    ($1, $2)
`

type InsertUserParams struct {
	Login    string
	Password string
}

func (q *Queries) InsertUser(ctx context.Context, arg InsertUserParams) error {
	_, err := q.db.ExecContext(ctx, insertUser, arg.Login, arg.Password)
	return err
}
